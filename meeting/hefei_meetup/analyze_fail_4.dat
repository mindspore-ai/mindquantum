# [No.1] construct_wrapper.175
# In file /tmp/ipykernel_342/2796478856.py(92)/
funcgraph fg_175(
        %para1 : Tensor(F64)[1, 4]    # x
        , %para2 : Ref[Tensor(F32)][4]    # fc3.bias
        , %para3 : Ref[Tensor(F32)][4, 32]    # fc3.weight
        , %para4 : Ref[Tensor(F32)][32]    # fc2.bias
        , %para5 : Ref[Tensor(F32)][32, 32]    # fc2.weight
        , %para6 : Ref[Tensor(F32)][32]    # fc1.bias
        , %para7 : Ref[Tensor(F32)][32, 4]    # fc1.weight
    ) {

#------------------------> 0
    %1 = FuncGraph::fg_176(%para1)    #(Tensor(F64)[1, 4])    # fg_176=construct.176 #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(96)/#[CNode]182
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(96)/#[CNode]183
}
# order:
#   1: construct_wrapper.175:[CNode]182{[0]: ValueNode<FuncGraph> construct.176, [1]: x}
#   2: construct_wrapper.175:[CNode]183{[0]: ValueNode<Primitive> Return, [1]: [CNode]182}


# [No.2] construct.176
# In file /tmp/ipykernel_342/2796478856.py(92)/
funcgraph fg_176[fg_175](
        %para8 : Tensor(F64)[1, 4]    # x
    ) {

#------------------------> 1
    %1 = FuncGraph::fg_177(%para8)    #(Tensor(F64)[1, 4])    # fg_177=construct.177 #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(93)/#x
    %2 = FuncGraph::fg_184(%1)    #(Undefined)    # fg_184=construct.184 #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(94)/#x
    %3 = FuncGraph::fg_185(%2)    #(Undefined)    # fg_185=construct.185 #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(95)/#q_values
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default
      # In file /tmp/ipykernel_342/2796478856.py(96)/#[CNode]186
}
# order:
#   1: construct.176:x{[0]: ValueNode<FuncGraph> construct.177, [1]: x}
#   2: construct.176:x{[0]: ValueNode<FuncGraph> construct.184, [1]: x}
#   3: construct.176:q_values{[0]: ValueNode<FuncGraph> construct.185, [1]: x}
#   4: construct.176:[CNode]186{[0]: ValueNode<Primitive> Return, [1]: q_values}


# [No.3] construct.177
# In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/
funcgraph fg_177[fg_175](
        %para9 : Tensor(F64)[1, 4]    # x
    ) {

#------------------------> 2
    %1 = FuncGraph::fg_178(%para9, %para6, %para7)    #(Tensor(F64)[1, 4], Ref[Tensor(F32)][32], Ref[Tensor(F32)][32, 4])    # fg_178=L-construct.178 #scope: Default
      # #[CNode]187
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/fc1-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/#[CNode]188
}
# order:
#   1: construct.177:[CNode]187{[0]: ValueNode<FuncGraph> L-construct.178, [1]: x, [2]: fc1.bias, [3]: fc1.weight}
#   2: construct.177:[CNode]188{[0]: ValueNode<Primitive> Return, [1]: [CNode]187}


# [No.4] L-construct.178
# In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/
funcgraph fg_178(
        %para10 : Tensor(F64)[1, 4]    # x
        , %para11 : Ref[Tensor(F32)][32]    # L-fc3.bias
        , %para12 : Ref[Tensor(F32)][32, 4]    # L-fc3.weight
    ) {
    %1 : Tuple[I64*2] = DoSignaturePrimitive::S-Prim-Shape{prim_type=1}(%para10)    #(Tensor(F64)[1, 4]) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(322)/        if len(x_shape) != 2:/#Φx_shape
    %2 : NoneType = DoSignaturePrimitive::S-Prim-check_dense_input_shape{prim_type=1}(%1)    #(Tuple[I64*2]) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(314)/        check_dense_input_shape(x_shape)/#189
    %3 : NoneType = Primitive::stop_gradient{prim_type=1}(%2)    #(NoneType) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/#190
    %4 : I64 = FuncGraph::fg_191(%1)    #(Tuple[I64*2])    # fg_191=L-ms_len.191 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#192
    %5 : Bool = DoSignaturePrimitive::S-Prim-not_equal{prim_type=1}(%4, I64(2))    #(I64, I64) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#193
    %6 : Bool = FuncGraph::fg_194(%5)    #(Bool)    # fg_194=L-bool_.194 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#193
    %7 : Func = Primitive::Switch{prim_type=1}(%6, FuncGraph::fg_195, FuncGraph::fg_179)    #(Bool, Func, Func)    # fg_195=L-✓construct.195, fg_179=L-✗construct.179 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#196

#------------------------> 3
    %8 = %7() #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#197
    %9 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%8, %3)    #(Undefined, NoneType) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/#198
    Primitive::Return{prim_type=1}(%9)    #(Undefined) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(312)/    def construct(self, x):/#[CNode]199
}
# order:
#   1: L-construct.178:Φx_shape{[0]: ValueNode<DoSignaturePrimitive> S-Prim-Shape, [1]: x}
#   2: L-construct.178:189{[0]: ValueNode<DoSignaturePrimitive> S-Prim-check_dense_input_shape, [1]: Φx_shape}
#   3: L-construct.178:192{[0]: ValueNode<FuncGraph> L-ms_len.191, [1]: Φx_shape}
#   4: L-construct.178:193{[0]: ValueNode<DoSignaturePrimitive> S-Prim-not_equal, [1]: 192, [2]: ValueNode<Int64Imm> 2}
#   5: L-construct.178:193{[0]: ValueNode<FuncGraph> L-bool_.194, [1]: 193}
#   6: L-construct.178:196{[0]: ValueNode<Primitive> Switch, [1]: 193, [2]: ValueNode<FuncGraph> L-✓construct.195, [3]: ValueNode<FuncGraph> L-✗construct.179}
#   7: L-construct.178:197{[0]: 196}
#   8: L-construct.178:[CNode]199{[0]: ValueNode<Primitive> Return, [1]: 198}


# [No.5] L-✗construct.179
# In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/
funcgraph fg_179[fg_178](
) {

#------------------------> 4
    %1 = FuncGraph::fg_180(%para10)    #(Tensor(F64)[1, 4])    # fg_180=L-↓construct.180 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#200
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/#201
}
# order:
#   1: L-✗construct.179:200{[0]: ValueNode<FuncGraph> L-↓construct.180, [1]: x}
#   2: L-✗construct.179:201{[0]: ValueNode<Primitive> Return, [1]: 200}


# [No.6] L-↓construct.180
# In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(315)/        if len(x_shape) != 2:/
funcgraph fg_180[fg_178](
        %para13 : Tensor(F64)[1, 4]    # Φx
    ) {
    %1 : Bool = FuncGraph::fg_194(Bool(1))    #(Bool)    # fg_194=L-bool_.194 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#202
    %2 : Func = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_181, FuncGraph::fg_203)    #(Bool, Func, Func)    # fg_181=L-✓↓construct.181, fg_203=L-✗↓construct.203 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#204

#------------------------> 5
    %3 = %2() #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#205
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#206
}
# order:
#   1: L-↓construct.180:x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MatMul, [1]: Φx, [2]: L-fc3.weight}
#   2: L-↓construct.180:202{[0]: ValueNode<FuncGraph> L-bool_.194, [1]: ValueNode<BoolImm> true}
#   3: L-↓construct.180:204{[0]: ValueNode<Primitive> Switch, [1]: 202, [2]: ValueNode<FuncGraph> L-✓↓construct.181, [3]: ValueNode<FuncGraph> L-✗↓construct.203}
#   4: L-↓construct.180:205{[0]: 204}
#   5: L-↓construct.180:206{[0]: ValueNode<Primitive> Return, [1]: 205}


# [No.7] L-✓↓construct.181
# In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/
funcgraph fg_181[fg_180](
) {

#------------------------> 6
    %1 = $(L-✓↓construct.181):DoSignaturePrimitive::S-Prim-MatMul{prim_type=1}[transpose_x1=Bool(0), transpose_b=Bool(1), transpose_a=Bool(0), output_names=["output"], transpose_x2=Bool(1), input_names=["x1", "x2"]](%para13, %para12)    #(Tensor(F64)[1, 4], Ref[Tensor(F32)][32, 4]) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(317)/        x = self.matmul(x, self.weight)/#x
    %2 = DoSignaturePrimitive::S-Prim-BiasAdd{prim_type=1}[input_names=["x", "b"], output_names=["output"], format="NCHW"](%1, %para11)    #(Undefined, Ref[Tensor(F32)][32]) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(319)/            x = self.bias_add(x, self.bias)/#x
    %3 = FuncGraph::fg_207(%2)    #(Undefined)    # fg_207=L-↓↓construct.207 #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#208
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default/fc3-Dense
      # In file /usr/local/lib/python3.7/dist-packages/mindspore/nn/layer/basic.py(318)/        if self.has_bias:/#209
}
# order:
#   1: L-✓↓construct.181:x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-BiasAdd, [1]: x, [2]: L-fc3.bias}
#   2: L-✓↓construct.181:208{[0]: ValueNode<FuncGraph> L-↓↓construct.207, [1]: x}
#   3: L-✓↓construct.181:209{[0]: ValueNode<Primitive> Return, [1]: 208}


#===============================================================================
# num of function graphs in stack: 8
